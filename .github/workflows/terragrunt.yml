# # name: 'Terragrunt GitHub Actions'
# # on:
# #   - push
# # env:
# #   tf_version: 'latest'
# #   tg_version: 'latest'
# #   tf_working_dir: 'test'
# #   TF_VAR_project_id: 'alpha-siged-education-pro'
# #   GCP_SA: 'gcp-sa-tf-admin@alpha-siged-education-pro.iam.gserviceaccount.com'
# #   BUCKET_NAME: 'trivium-prod-bkp'
# #   GCP_CREDENTIAL: ${{ secrets.GCP_CREDENTIAL }}
# # jobs:
# #   terragrunt:
# #     name: 'Terragrunt'
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: 'Checkout'
# #         uses: actions/checkout@master
# #       # - id: 'auth'
# #       #   uses: 'google-github-actions/auth@v0'
# #       #   with:
# #       #     credentials_json: ${{ secrets.GCP_CREDENTIAL }}
# #       # - name: 'Terragrunt Format'
# #       #   uses: the-commons-project/terragrunt-github-actions@master
# #       #   with:
# #       #     tf_actions_version: ${{ env.tf_version }}
# #       #     tg_actions_version: ${{ env.tg_version }}
# #       #     tf_actions_binary: 'terraform'
# #       #     tf_actions_subcommand: 'fmt'
# #       #     tf_actions_working_dir: ${{ env.tf_working_dir }}
# #       #     tf_actions_comment: true
# #       #   env:
# #       #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# #       - name: 'Terragrunt Init'
# #         uses: the-commons-project/terragrunt-github-actions@1.0.6
# #         with:
# #           tf_actions_version: ${{ env.tf_version }}
# #           tg_actions_version: ${{ env.tg_version }}
# #           tf_actions_subcommand: 'init'
# #           # tf_actions_working_dir: ${{ env.tf_working_dir }}
# #           tf_actions_working_dir: 'test/'
# #           tf_actions_comment: true
# #         env:
# #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# #       # - name: 'Terragrunt Validate'
# #       #   uses: the-commons-project/terragrunt-github-actions@master
# #       #   with:
# #       #     tf_actions_version: ${{ env.tf_version }}
# #       #     tg_actions_version: ${{ env.tg_version }}
# #       #     tf_actions_binary: 'terraform'
# #       #     tf_actions_subcommand: 'validate'
# #       #     tf_actions_working_dir: ${{ env.tf_working_dir }}
# #       #     tf_actions_comment: true
# #       #   env:
# #       #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# #       # - name: 'Terragrunt Plan'
# #       #   uses: the-commons-project/terragrunt-github-actions@master
# #       #   with:
# #       #     tf_actions_version: ${{ env.tf_version }}
# #       #     tg_actions_version: ${{ env.tg_version }}
# #       #     tf_actions_subcommand: 'plan'
# #       #     tf_actions_working_dir: ${{ env.tf_working_dir }}
# #       #     tf_actions_comment: true
# #       #   env:
# #       #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# name: Example workflow


# on: [push]


# env:
#   tf_version: 'latest'
#   tg_version: 'latest'
#   tf_working_dir: 'test/vpc'

# jobs:
#   example:
#     name: Example Terragrunt interaction
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@master
#       - name: Setup Format
#         uses: the-commons-project/terragrunt-github-actions@master
#         with:
#           tf_actions_version: ${{ env.tf_version }}
#           tg_actions_version: ${{ env.tg_version }}
#           tf_actions_binary: 'terraform'
#           tf_actions_subcommand: 'fmt'
#           tf_actions_working_dir: ${{ env.tf_working_dir }}
#           tf_actions_comment: true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: 'Terragrunt Init'
#         uses: the-commons-project/terragrunt-github-actions@master
#         with:
#           tf_actions_version: ${{ env.tf_version }}
#           tg_actions_version: ${{ env.tg_version }}
#           tf_actions_subcommand: 'init'
#           tf_actions_working_dir: ${{ env.tf_working_dir }}
#           tf_actions_comment: true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       # - name: 'Terragrunt Validate'
#       #   uses: the-commons-project/terragrunt-github-actions@master
#       #   with:
#       #     tf_actions_version: ${{ env.tf_version }}
#       #     tg_actions_version: ${{ env.tg_version }}
#       #     tf_actions_binary: 'terraform'
#       #     tf_actions_subcommand: 'validate'
#       #     tf_actions_working_dir: ${{ env.tf_working_dir }}
#       #     tf_actions_comment: true
#       #   env:
#       #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: 'Terragrunt Plan'
#         uses: the-commons-project/terragrunt-github-actions@master
#         with:
#           tf_actions_version: ${{ env.tf_version }}
#           tg_actions_version: ${{ env.tg_version }}
#           tf_actions_subcommand: 'plan'
#           tf_actions_working_dir: ${{ env.tf_working_dir }}
#           tf_actions_comment: true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: 'Terragrunt CI'

on: [push]

jobs:
  Terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terragrunt CLI and configure the Terragrunt CLI configuration file with a Terragrunt Cloud user API toke
    - name: Setup Terraform v1.2.6
      uses: hashicorp/setup-Terraform@v1
      with:
        terraform_version: 1.2.6
        terraform_wrapper: true
    - name: Setup Terraform version
      run: terraform --version
    - name: Setup Terraform wrapper path
      run: which terraform
    - name: Setup Terragrunt v0.38.4
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIAL }}
        TF_VAR_project_id: alpha-siged-education-pro
      run: |
        sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.38.4/terragrunt_linux_amd64"
        sudo chmod +x /bin/terragrunt
        cd test
        #terragrunt run-all plan --terragrunt-non-interactive
        #terragrunt run-all apply --terragrunt-non-interactive
        #terragrunt run-all destroy --terragrunt-non-interactive

    # Initialize a new or existing Terragrunt working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terragrunt Init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIAL }}
      run: |
        cd test
        terragrunt run-all init --terragrunt-non-interactive


    # # Generates an execution plan for Terragrunt
    # - name: Terragrunt Plan
    #   run: terragrunt run-all plan --terragrunt-non-interactive
    #   env:
    #     GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIAL }}

      # On push to main, build or change infrastructure according to Terragrunt configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terragrunt Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    # - name: Terragrunt Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terragrunt apply-all --terragrunt-non-interactive
    #   env:
    #     GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIAL }}